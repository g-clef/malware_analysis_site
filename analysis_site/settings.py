"""
Django settings for analysis_site project.

Generated by 'django-admin startproject' using Django 2.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""
import os
from datetime import timedelta
from socket import gethostname, gethostbyname

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("DJANGO_SECRET", "alskfkljasdjlkasdoiuadfoiuqwearf")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["localhost",
                 "127.0.0.1",
                 gethostname(),
                 gethostbyname(gethostname())
                 ]

pod_ip = os.environ.get("ALLOWED_IP", None)
if pod_ip is not None:
    ALLOWED_HOSTS.append(pod_ip)

pod_hostname = os.environ.get("ALLOWED_HOST", None)
if pod_hostname is not None:
    ALLOWED_HOSTS.append(pod_hostname)

extra_hosts = os.environ.get("EXTRA_HOSTS", "")
if extra_hosts:
    for host in extra_hosts.split(","):
        if host:
            ALLOWED_HOSTS.append(host)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "rest_framework",
    "rest_framework.authtoken",
    "ui"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'analysis_site.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'analysis_site.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.postgresql',
       'NAME': 'analyzer',
       'USER': os.environ.get("DB_USER", "django"),
       'PASSWORD': os.environ.get("DB_PW", "django"),
       'HOST': os.environ.get("DB_HOST", "localhost"),
       'PORT': '5432'
   }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication'
    ]
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

TASK_EXPIRATION_AGE = timedelta(days=2)

EXECUTABLE_TYPES = {
    "application/x-dosexec",
}

ARCHIVE_SERVER_URL = os.environ.get("ARCHIVE_SITE_URL", "http://malwarearchivesite:8000/api")

ARCHIVE_SERVER_TOKEN = os.environ.get("ARCHIVE_SITE_TOKEN")

ARCHIVE_PATH = os.environ.get("ARCHIVE_PATH", "/tmp")

VT_API_KEY = os.environ.get("VTAPI_KEY", "")

VT_URL = "https://www.virustotal.com/vtapi/v2/file/report"

ENABLE_VIRUSTOTAL = os.environ.get("ENABLE_VIRUSTOTAL", "False").lower() in ("true", "1", "yes")
